# Sample workflow for building and deploying a Nuxt site to GitHub Pages
#
# To get started with Nuxt see: https://nuxtjs.org/docs/get-started/installation
#
name: Deploy Nuxt site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["gh-pages"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

#name: gh-pages
#
#on: [push, pull_request]

jobs:
#  deploy:
#    runs-on: ${{ matrix.os }}
#
#    strategy:
#      matrix:
#        os: [ ubuntu-latest ]
#        node: [ 20.10.x ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node }}
#          cache: npm
#          cache-dependency-path: "./package-lock.json"
#      - run: npm install
#      - run: npm run generate
#      - uses: JamesIves/github-pages-deploy-action@v4.4.0
#        with:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          BRANCH: gh-pages
#          FOLDER: '.output/public'
#          CLEAN: true

  # Deployment job
  deploy:

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

#    # Deploy to the github_pages environment
#    environment:
#      name: github_pages
#      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
